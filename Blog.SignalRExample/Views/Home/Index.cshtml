@{
    ViewBag.Title = "Knockout Page";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")

    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/jquery.signalR-1.1.1.js" type="text/javascript"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>

    <script src="~/Scripts/underscore.js" type="text/javascript"></script>

    <script src="~/Scripts/knockout-2.2.1.js" type="text/javascript"></script>
</head>
<body>
    <div class="page">
        <header>
            <div id="title">
                <h1>Real Time Pricing</h1>
            </div>
        </header>
        <section id="main">
            <h2>Stock Tracker (w/ knockout)</h2>
            <table>
                <tr>
                    <th>Symbol
                    </th>
                    <th>Price
                    </th>
                    <th>Last Updated
                    </th>
                </tr>
                <tbody data-bind="foreach: stocks">
                    <tr>
                        <td data-bind="text: symbol"></td>
                        <td data-bind="text: price"></td>
                        <td data-bind="text: updated"></td>
                    </tr>
                </tbody>
            </table>
            @Html.ActionLink("Go to Angular >>", "Index", "HomeAngular")


            <script type="text/javascript">
                function Stock(symbol, price, updated) {
                    this.symbol = symbol;
                    this.price = ko.observable(price);
                    this.updated = ko.observable(updated);
                };

                $(function () {
                    var viewModel = { stocks: ko.observableArray() };

                    $(function () {
                        var demoHub = $.connection.demoHub;
                        demoHub.client.UpdatePrice = function (priceUpdate) {
                            _.chain(viewModel.stocks())
                                .filter(function (stock) { return stock.symbol == priceUpdate.Symbol; })
                                .each(function (stock) {
                                    stock.price(priceUpdate.Price.toFixed(2));
                                    stock.updated(new Date());
                                });
                        };

                        $.ajax({
                            url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Stock" })',
                            success: function (data) {
                                // Proxy created on the fly
                                _.chain(data)
                                    .each(function (stock) {
                                        viewModel.stocks.push(new Stock(stock.Symbol, stock.Price, new Date()));
                                    });

                                ko.applyBindings(viewModel);

                                // Start the connection
                                $.connection.hub.start();
                            }
                        });
                    });
                });
            </script>
        </section>
        <footer>
        </footer>
    </div>
</body>
</html>
